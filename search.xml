<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>软件测试基础</title>
      <link href="/2018/10/04/soft-testing-base/"/>
      <url>/2018/10/04/soft-testing-base/</url>
      
        <content type="html"><![CDATA[<h4 id="从软件BUG的巨大损失和影响来认识软件测试"><a href="#从软件BUG的巨大损失和影响来认识软件测试" class="headerlink" title="从软件BUG的巨大损失和影响来认识软件测试"></a>从软件BUG的巨大损失和影响来认识软件测试</h4><p>1、一个BUG引发证券业400亿损失<br>2000年日本一个证券公司（瑞穗证券）的一个交易员以不合理的价格进行交易，操作时出现错误，1日元售出了61万股，发现时无法取消，导致整个股市动荡。这个证券公司的损失超过400亿。</p><p>这是一个开发时的Bug，非常不起眼，而且在特定组合条件下才会出来，在多次组合条件下才会出现，因此多次测试、验收中都没有人发现。</p><p>扩展阅读：<a href="http://news.163.com/16/0325/09/BJ0BOLFE000155K8.html" target="_blank" rel="noopener">400亿天价的BUG</a></p><p>2、1900年AT&amp;T公司断网，损失超过7500万<br>在软件升级中出了一行有Bug的代码，导致114台交换机每六秒宕机重启一次，所有长途电话服务暂停9个小时。造成7500万的电话通话中断，20万张机票没法按时预定。</p><p>3、著名的“千年虫”<br>“千年虫”问题的根源始于60年代。当时计算机存储器的成本很高，如果用四位数字表示年份，就要多占用存储器空间，就会使成本增加，因此为了节省存储空间，计算机系统的编程人员采用两位数字表示年份。<br>因此当系统进行（或涉及到）跨世纪的日期处理运 算时（如多个日期之间的计算或比较等），就会出现错误的结果，进而引发各种各样的系统功 能紊乱甚至崩溃。</p><p>扩展阅读：<a href="https://baike.baidu.com/item/%E5%8D%83%E5%B9%B4%E8%99%AB/2954" target="_blank" rel="noopener">千年虫(计算机2000年问题)</a></p><h4 id="软件测试学什么？"><a href="#软件测试学什么？" class="headerlink" title="软件测试学什么？"></a>软件测试学什么？</h4><ul><li>软件测试的定义</li><li>测试遵行的准则</li><li>软件测试的分类及适用场景</li><li>什么时候开始测试？测试方案如何设计</li><li>测试流程是怎么样？怎么样提Bug?</li><li>为什么要做自动测试？怎么做？</li></ul><h5 id="什么是软件测试？"><a href="#什么是软件测试？" class="headerlink" title="什么是软件测试？"></a>什么是软件测试？</h5><blockquote><p>软件测试是对程序能够按预期运行建立起的一种信心。<br>—– Bill Hetzel, 1973 (早期定义)</p></blockquote><blockquote><p>测试中为发现错误而执行程序的过程。<br>—– Myers, 1979 (经典定义)</p></blockquote><blockquote><p>使用人工或自动的手段来运行或测量软件系统的过程，以检验软件系统是否满足规定的要求，并找出与预期结果之间的差异。<br>—– IEEE定义（ISO/IEC/IEEE 29119）</p></blockquote><h5 id="软件测试所遵循的原则"><a href="#软件测试所遵循的原则" class="headerlink" title="软件测试所遵循的原则"></a>软件测试所遵循的原则</h5><ul><li>测试显示缺陷的存在，但不能证明系统不存在缺陷</li><li>穷尽测试不是可能的，应设定及时终止的条件</li><li>软件测试应该尽早进行</li><li>软件缺陷具备集群特性</li><li>测试的杀虫剂悖论<br>采用同样的测试用例，测试方法多次重复测试某一个模块，就不能发现新的BUG，所以测试用例和测试方法，要不定期评审，定期增加。</li><li>测试的二八原则<br>测试时间和资源总是有限的，测试总是存在风险，重点测试软件中20%的重点模块。</li><li>测试活动依赖于测试背景<br>如金融行业软件对安全性测试要求高，电信行业对并发性要求高。</li></ul><h5 id="软件测试的分类"><a href="#软件测试的分类" class="headerlink" title="软件测试的分类"></a>软件测试的分类</h5><p>按测试阶段分类：单元测试，系统测试，集成测试，验收测试</p>]]></content>
      
      
      
        <tags>
            
            <tag> 软件测试 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>选择开发还是测试？</title>
      <link href="/2018/10/04/dev-or-test/"/>
      <url>/2018/10/04/dev-or-test/</url>
      
        <content type="html"><![CDATA[<p>很多同学在培训前，都会问是选择开发还是测试，测试是不是门槛太低、太简单，以后没有什么发展？本文就带着大家一起分析，究竟是选择软件开发，还是测试，开发和测试的区别又是什么，选择的依据和关键又是什么，如何做决定。</p><h4 id="开发和测试的区别"><a href="#开发和测试的区别" class="headerlink" title="开发和测试的区别"></a>开发和测试的区别</h4><p>这里的开发指的是软件开发工程师岗位，根据工作内容的分工，有前端开发和后端开发，全栈开发。根据所使用的技术和平台，又分为Java, C++, PHP, .Net, Python, Go, Android, iOS… 开发工程师。还有数据库开发，嵌入式开发等等。</p><blockquote><p>软件开发是根据用户要求建造出软件系统或者系统中的软件部分的过程。软件开发是一项包括需求捕捉、需求分析、设计、实现和测试的系统工程。软件一般是用某种程序设计语言来实现的。软件开发一般分为四个步骤：需求、设计、编程和测试。</p></blockquote><blockquote><p>软件开发工程师是从事软件开发相关工作的人员的统称。 软件开发工程师的技术要求是比较全面的。</p></blockquote><p>所以大多数同学问是实际上编程(coding)和测试（testing）的区别。编程（coding）就是编写一定的代码，让计算机来解决某个问题，使计算机能够根据人的指令一步一步去工作，完成某种特定的任务。测试（testing）是检验软件系统是不是满足规定的要求，找出与预期的差异，并且跟踪和修复的过程。</p><p>从工作内容上简单来讲，编程开发就是创造和实现功能，软件测试就是检验和检查这个过程中有没有什么缺陷和遗漏。</p><h4 id="测试是不是很low啊"><a href="#测试是不是很low啊" class="headerlink" title="测试是不是很low啊"></a>测试是不是很low啊</h4><p>在一些同学的看来，软件测试就是在那里点点点，没有什么技术含量。要选IT互联网行业的岗位，肯定不选软件测试。</p><h4 id="开发和测试到底选哪个？"><a href="#开发和测试到底选哪个？" class="headerlink" title="开发和测试到底选哪个？"></a>开发和测试到底选哪个？</h4>]]></content>
      
      
      
        <tags>
            
            <tag> 工作 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>2018年国庆节拍</title>
      <link href="/2018/10/04/national-day-2018/"/>
      <url>/2018/10/04/national-day-2018/</url>
      
        <content type="html"><![CDATA[<h5 id="边走边拍"><a href="#边走边拍" class="headerlink" title="边走边拍"></a>边走边拍</h5><p>昨天下午出去走走，去了犹太难民纪念馆，1933老场坊，北外滩。这几个地方都去过多次，沿着北外滩一直走，从下午走到黄昏，走到日落，往一直走，外滩国际码头，虹口滨江一直没有走到头。</p><p><img src="/images/2018101-1.jpg" alt="拍出大片的感觉来"></p><p><img src="/images/2018101-2.jpg" alt="游艇停到酒店门口"></p><p><img src="/images/2018101-3.jpg" alt="远眺"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 记录 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>我们预科讲什么内容，有什么要求</title>
      <link href="/2018/10/02/pre-study/"/>
      <url>/2018/10/02/pre-study/</url>
      
        <content type="html"><![CDATA[<p>然学科技对软件测试学习的基本要求：</p><ul><li>掌握计算机单词200个</li><li>打字速度不少80字/分</li><li>有一定的逻辑思维</li></ul><p>有同学会问，神马，这么低的要求吗？还也有同学会说，我单词基本上都忘了，怎么办？</p><h4 id="对英语的要求"><a href="#对英语的要求" class="headerlink" title="对英语的要求"></a>对英语的要求</h4><p>1、200个英文单词，这个要求真的不高，可能很多同学工作后，基本没有用过英文，大部分已经忘了。所以需要在预科阶段快速地捡进来。计算机编程测试的单词大多数都比较简单，如<code>width</code>, <code>height</code>, <code>img</code>(image), <code>style</code>, <code>select</code>等等。</p><p>2、我们一个班上的同学，一半同学过了4级或6级，每个班级都有那么一两个同学英文很好，有国外学习、留学经历，甚至是国外读的研究生。</p><p>不同程度、学习经历的同学在一个班级学习、互动，也是一个很好的交流机会，有利于大家的快速提升。</p><p>3、英语基础好的同学，在学习过程中会理解快，学习稍轻松一点。同时在就业面试时有一些优势。基础差的同学，可以多利用预科阶段的时间，多记多背，持续坚持学。我们都预科会做单词听写和检查。</p><h4 id="对键盘操作（打字）的要求"><a href="#对键盘操作（打字）的要求" class="headerlink" title="对键盘操作（打字）的要求"></a>对键盘操作（打字）的要求</h4><p>为什么把打字的要求单独提出来，是有原因的。因为移动互联网的快速发展，大家使用手机的频率越来越高，手机也成一个效率工作，甚至办公工具，在我们的日常生活和工作中越来越重要。很多同学都是“拇指党”，两个大拇指打起字来飞快，甚至可以快速敲出一篇文章来。</p><p>但是我们做计算机编程、开发、测试，主要的工具还是电脑、笔记本电脑，我们需要布署安装开发、测试环境，安装各种各样的工具，基本上所有的工作在电脑上操作。</p><p>一部分同学长时间没有使用键盘，需要在这个时候快速熟练起来，这样，正式开始上课后，才能跟上老师的节奏。</p><h4 id="对编程语言的要求"><a href="#对编程语言的要求" class="headerlink" title="对编程语言的要求"></a>对编程语言的要求</h4><p>对编程语言的要求，就是有一定的逻辑思维能力。我们通常在预科阶段讲HTML, Java基础, Linux基本命令，来训练大家的逻辑思维，同时也给后续的学习打个基础。</p><p>试听的同学，一方面可以了解我们课程，了解老师上课的方式模式，了解班级学习氛围，同时也看看自己适不适合学习，自己学习起来难度有多大。</p><hr><h4 id="我们对软件测试入门的要求低吗？"><a href="#我们对软件测试入门的要求低吗？" class="headerlink" title="我们对软件测试入门的要求低吗？"></a>我们对软件测试入门的要求低吗？</h4><p>应该说，我们现在对软件测试入门的要求是比较低，同时又有学历的要求（大专及以上），这是根据行业的需求，公司的要求来确定的，可以肯定，以后的要求逐步提高。也可以这样理解，现在对于基础差一点的同学，进入到IT互联网行业，软件测试领域还有一定的窗口期，是一个比较好的时机。<br><img src="/images/testing-.png" alt="软件测试的岗位薪资和要求"></p><p>所以，对大家来说，就是抓紧机会，早学早受益，早一点进入这个领域早一天享受行业带来的红利。软件测试有入门门槛低，对代码的要求没有编程开发那么高，同时职业发展的路径比较广（测试经理，产品经理），也可以走深入的技术路线（测试开发工程师，测试架构师等）。</p><h4 id="少儿编程如火如荼发展，IT行业的门槛会越来越高"><a href="#少儿编程如火如荼发展，IT行业的门槛会越来越高" class="headerlink" title="少儿编程如火如荼发展，IT行业的门槛会越来越高"></a>少儿编程如火如荼发展，IT行业的门槛会越来越高</h4><p>现在编程已经开始逐步进入中小学课程，要求3年级开始学，山东等省已将Python纳入高考的内容。现在学习IT编程，就像30、40年前学习英语一样，马云当年学英语时，绝大多数家庭都买不起收录机，但马云的父母那时眼光真是高瞻远瞩。</p><p>可以想像得到，从少儿编程环境中成长起来的一代，会一步步抬高这个行业门槛，我们也会从移动互联网时代，走向智能互联网(AI)时代。<br><img src="/images/py-children.jpg" alt="少儿编程的书籍"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 工作 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>重新认识销售</title>
      <link href="/2018/10/02/understand-sales-again/"/>
      <url>/2018/10/02/understand-sales-again/</url>
      
        <content type="html"><![CDATA[<h4 id="一、为什么要开晨会？"><a href="#一、为什么要开晨会？" class="headerlink" title="一、为什么要开晨会？"></a>一、为什么要开晨会？</h4><p>  我们从9月3号开始开晨会，当然之前也有开，只是没有坚持去做，也有经常不开。为什么要开晨会，首先，晨会是一个启动器，能够使用我们快速进入到工作状态中。</p><h5 id="1-晨会是工作的启动器"><a href="#1-晨会是工作的启动器" class="headerlink" title="1. 晨会是工作的启动器"></a>1. 晨会是工作的启动器</h5><p>  办公室早上常是这样一种状态，9点过了还有同事在吃早点，有去上洗手间的，有去洗杯子倒茶水的，还有看看手机新闻的。这都不是一种能马上进入工作状态的节奏，很可能10分钟、20分钟过去了，还在延续这些事。</p><p>  所以早晨一来就开晨会，有助于大家快速调整到工作当中去。我们平时见得比较多的，美发店、地铁站工作人员一早上会站在店前，或办公区前开晨会，站着开，或喊口号，还有跑步做操的，其实这也是一种仪式，快速调整大家情绪和状态的仪式，就像听到国歌大家都会肃然起敬。</p><blockquote><p><strong>启动器</strong>：人在各种状态转换时，总有一些标志性事件，如有的人是早晨起来马上刷牙，就清醒过来，有的人是要吃完早餐。启动器是一种仪式。<br><img src="/images/qidongqi.jpeg" alt="启动器"></p></blockquote><p>  刚开始，我们9点过5分、7分，开始开晨会，后来成红要求，基本上做到9点整去教室开。周六我们也开，人少我们也在开，慢慢养成习惯，偶尔有一天没有开，还有同事问我，“彭老师，今天不开晨会吗”？这就是习惯。9点开晨会，我看到大家慢慢比之前会早到一点点。</p><h5 id="2-晨会天天开，讲什么？"><a href="#2-晨会天天开，讲什么？" class="headerlink" title="2. 晨会天天开，讲什么？"></a>2. 晨会天天开，讲什么？</h5><p>  天天开晨会，也是一个很boring的事，得有东西讲啊。所以一开始我就在思考这个问题。一是前期由我来主持主讲，后期要由咨询主管来主持，再由同事来轮流主持。讲什么呢，我来讲的话，自己定了这样几个内容：</p><ul><li>软件测试基本概念、基础技术<br>把软件测试的基本概念、基本工具、基础技术用深入浅出，举例子，讲案例的方式，通俗直白地讲给大家听。</li><li>预科阶段的内容，简化成5-8分钟的课<br>我把预科阶段的内容进行精简整理，给销售同事来讲，让大家更好了解我们在入门阶段讲什么，有没有趣，难不难，听不听得懂。</li><li>昨天工作中发现的问题<br>对业务问题进行分析、讲解</li><li>我的所见所闻所感<br>讲与工作相关、与职场相关，与职业选择相关，与学习相关的内容。</li></ul><p>这样一列下来，发现每天总有东西，一周以后，我发现早会的内容还要记下来，要持续整理。</p><p>其实不光是市场、销售要开晨会，教学教质也应该开，班级里上课前也需要一个启动器，关键是内容如何安排，如何坚持持续地去做。</p><p>晨会的时间不宜过长，不要超过15分钟，我自己讲的话，就当做一个演讲的训练，要有内容、有启发，或者明确一个任务、一个要求，还有要时间控制。</p><h4 id="二、不会聊天就不是个好的销售"><a href="#二、不会聊天就不是个好的销售" class="headerlink" title="二、不会聊天就不是个好的销售"></a>二、不会聊天就不是个好的销售</h4><p>“咨询就是聊天，不会聊天就不是一个好销售”。这句话是张总说的，我当时就记下来。我一直在思考好的销售身上有哪些特质，会聊天，应该就是其中一个，也是一个基本要求。</p><p>我自己是一个不会聊天的人，换句话来说，就叫情商比较低。聊着聊着就聊死了，或者聊几句就聊死了，前天一起吃饭时，霖霖还笑我。</p><p>我们咨询一个客户，要经过寒暄暖场，要了解客户的需求，了解客户学习、工作经历，了解他的家庭状况、成长环境，跟他分析行业、职业和岗位，了解他的经济状况和付款方法，还要判断关单的时机和方式。整个过程得要1个半小时到2个小时，甚至更长。</p><p>这样一系列的内容，都是靠咨询师来沟通、讲解，还有互动。不会聊天，这些内容就无法展开，或者流于肤浅，没有信任，流程很快就讲完了。</p><p>会聊天，就能把控整个节奏和进度，比较快地建立信任，即使没有关单预报，也可以长期跟踪。</p><h4 id="三、销售要会讲故事"><a href="#三、销售要会讲故事" class="headerlink" title="三、销售要会讲故事"></a>三、销售要会讲故事</h4><p>之前我把这个叫学员故事、学习故事、就业案例，跟大家说，每个sales要熟悉我们的就业案例，跟客户讲时选择类似的案例来讲，如来自同一个地方的，同一个学校，同专业，有相同的工作经历。</p><p>我注意到，成红在咨询时，特别能讲故事，会讲故事。她在咨询时经常讲的故事有：1）我自己就是培训学习出来的，我为什么选择培训学习；2）我是怎么做销售，怎么加班，怎么成长的，我为什么要选择创业公司；3）我的弟弟就是然学培训的，他是什么专业，什么要选择软件测试。他是怎么学习，怎么去面试的，怎么进携程的。</p><p>后来读了一个销售的书，《销售就是卖故事》。发现她讲故事的方式，暗合书中的要求。</p><blockquote><p>讲自己的故事，最熟悉的事。<br>情感投入，有冲突有细节。<br>引发思考，有行动建议，正能量。</p></blockquote><p>我也听到，霖霖在咨询时讲我儿子的学习事，说我们老板的儿子，当初是怎样怎么，是什么样的情况，现在薪资多少等等。</p><p>咨询中如果能激发客户的沟通欲望，让他们讲自己的故事，再加以引导分析，也是一种有效的方法。</p><h4 id="四、销售要养成哪些好习惯"><a href="#四、销售要养成哪些好习惯" class="headerlink" title="四、销售要养成哪些好习惯"></a>四、销售要养成哪些好习惯</h4><p>9月份，我们搞了多次的销售培训，成红也分享了top sales的好习惯，如思考的习惯、总结的习惯、早起的习惯、做笔记的习惯<br>倾听的习惯等等。</p><p>刚好这大半年来，我也不断在看习惯培训方面的书，也在每个班级开班时，给大家分享如何养成习惯，如何去坚持。</p><p>我更看重的是如何践行一个习惯，怎样从一个小事开始做起，养成习惯。如何叠加一个又一个的好习惯。</p><h4 id="五、销售如何调整心态"><a href="#五、销售如何调整心态" class="headerlink" title="五、销售如何调整心态"></a>五、销售如何调整心态</h4><p>这几个月当中，我们都会碰到上门、报名停滞的情况，有时候一个星期，或10天，业绩几乎没有任何进展。有时候也变比较焦急，甚至焦虑。</p><p>如何调整心态，或者快速发现这种情况出现的苗头，及时调整。</p><p>我想不外乎以下几个方面：</p><ul><li>看数据、分析数据，找到业务变化的节点。</li><li>抓业务细节的落实，检查日常工作。</li><li>快速应变应对，如上门话术，咨询策略。</li></ul><h4 id="六、“学生都叫我然姐”"><a href="#六、“学生都叫我然姐”" class="headerlink" title="六、“学生都叫我然姐”"></a>六、“学生都叫我然姐”</h4><p><img src="/images/ran.png" alt="然"><br>这个是成红对我说，我在班级上课，也听到过同学这么叫。这个称呼意味着什么？亲近、信任以及和品牌的关联。俨然一个然学品牌的代言人。</p><h5 id="信任和承诺"><a href="#信任和承诺" class="headerlink" title="信任和承诺"></a>信任和承诺</h5><blockquote><p>然。在汉语中基本字义是：是，答应，信守。</p></blockquote><p>这是一种信任和承诺，销售就是要快速建立与客户的信任关系。表面上销售是在卖产品，卖课程，实际上卖的一种信任，是销售自己，卖自己。客户在一个比较短的时间内，很难对我们公司，我们课程，我们的就业有比较深、比较全面的了解。但是一定在这个过程中，对咨询师有一个了解。所以卖产品的过程，很多客户是先信任人，其次是对产品和公司的信任。</p><p>这大概也叫个人影响力，个人魅力或人格魅力。</p><h5 id="影响力"><a href="#影响力" class="headerlink" title="影响力"></a>影响力</h5><blockquote><p>然。在古汉语，从火肰声。四点是火的变形。然本义主宰，然物即主宰万物，描述围火烤肉，旁边有犬的状态。</p></blockquote><p>所以，然也是影响力，像火一样温暖和炙烤。“聚一是团火”，然也是一团火，表现在我们的销售、咨询师有亲和力、积极和正能量。还要会做传播。</p><h5 id="个人IP与公司品牌"><a href="#个人IP与公司品牌" class="headerlink" title="个人IP与公司品牌"></a>个人IP与公司品牌</h5><p>“然姐”，我觉得这个叫出了，对老师个人的尊重和信任，也建立了与我们公司的联系。</p>]]></content>
      
      
      <categories>
          
          <category> 销售 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工作 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>开始日更</title>
      <link href="/2018/10/02/start-to-write/"/>
      <url>/2018/10/02/start-to-write/</url>
      
        <content type="html"><![CDATA[<h3 id="又立了一个Flag：日更"><a href="#又立了一个Flag：日更" class="headerlink" title="又立了一个Flag：日更"></a>又立了一个Flag：日更</h3><p>坚持每天更新一篇文章。在简书上一年半没有写了，9月底被触发了，还是决定每天要写一些东西，虽然每天在微博、微信朋友圈写一些文字，但是太碎片化了。</p><p>write here or there. 虽然没有在简书上写了，但是还在持续记录，在微博也连续也了8、9个月，记录我的生活、工作和思考。两个多月前，又在微信朋友圈持续记录，刚开始就是为了懂你英语的打卡，看到很多人打卡，连20字的文字也写不出，只有“打卡”两个字，我想要把学习英语的过程做一个全记录，于是不光是每天抽时间去读，还要记录下学习的感受和状况。一开始这些记录只设置了非常少的人可见，后来又把它当成一个微信朋友圈分组的实验，看看哪些人在关注我这个记录过程，有互动。我想最终会把这个分组取消。</p><p>每天写文章，肯定会是一个痛苦的过程。好在我这段时间一直在思考和践行习惯的养成。<br>现在每天做的事情有：</p><ul><li>读懂你英语1小时（连续71天）</li><li>背单词（开心词场，连续46天）</li><li>跑步（一周4～6次）</li><li>洗冷水澡</li></ul><p>今天装好HEXO，熟悉了全部的命令操作，Markdown使用起来得心应手，坚持写作应该是一个愉快的过程。写作内容，可能大部分以工作为主，以自己的思考整理为主。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 记录 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hexo安装NexT主题</title>
      <link href="/2018/10/02/hexo-change-theme/"/>
      <url>/2018/10/02/hexo-change-theme/</url>
      
        <content type="html"><![CDATA[<h5 id="下载NexT主题"><a href="#下载NexT主题" class="headerlink" title="下载NexT主题"></a>下载NexT主题</h5><p>将主题克隆到 themes 目录下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd &lt;博客存放的目录&gt;</span><br><span class="line">$ git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></p><h5 id="修改配置文件-config-yml"><a href="#修改配置文件-config-yml" class="headerlink" title="修改配置文件_config.yml"></a>修改配置文件<code>_config.yml</code></h5><p>将主题修改为next<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure></p><h5 id="部署到服务器"><a href="#部署到服务器" class="headerlink" title="部署到服务器"></a>部署到服务器</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g -d</span><br></pre></td></tr></table></figure><hr><h6 id="增加菜单"><a href="#增加菜单" class="headerlink" title="增加菜单"></a>增加菜单</h6><p>修改 themes – next – <code>_config.yml</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || home</span><br><span class="line">  archives: /archives || archive</span><br><span class="line">  categories: /categories/ || th</span><br><span class="line">  tags: /tags || tags</span><br></pre></td></tr></table></figure></p><p><code>|| home</code> 指的是菜单图标，没有的话，默认是问号。</p><h6 id="菜单中文"><a href="#菜单中文" class="headerlink" title="菜单中文"></a>菜单中文</h6><p>修改 根目录下的 <code>_config.yml</code> (注意：不是next下的<code>_config.yml</code>)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">language: zh-Hans</span><br></pre></td></tr></table></figure></p><h6 id="菜单样式（页面风格）"><a href="#菜单样式（页面风格）" class="headerlink" title="菜单样式（页面风格）"></a>菜单样式（页面风格）</h6><p>修改 themes – next – <code>_config.yml</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Schemes</span><br><span class="line">#scheme: Muse</span><br><span class="line">scheme: Mist</span><br><span class="line">#scheme: Pisces</span><br><span class="line">#scheme: Gemini</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>博客开张啦</title>
      <link href="/2018/10/01/mac-github-hexo/"/>
      <url>/2018/10/01/mac-github-hexo/</url>
      
        <content type="html"><![CDATA[<h3 id="Mac下Github搭建博客"><a href="#Mac下Github搭建博客" class="headerlink" title="Mac下Github搭建博客"></a>Mac下Github搭建博客</h3><ul><li>安装node.js<br>在官网下载，直接安装，用于生成静态页面</li><li>安装npm</li><li><p>安装hexo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo npm install hexo</span><br></pre></td></tr></table></figure></li><li><p>hexo 初始化</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init</span><br><span class="line"></span><br><span class="line">$ npm install</span><br><span class="line"></span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure></li></ul><p>Got, 在本地用浏览器打开即可访问 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a></p><ul><li><p>配置SSH密钥<br>用于本地代码，直接发布到github上。<br>首先，我们需要看看是否看看本机是否存在SSH keys,打开Git Bash,并运行:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~/. ssh</span><br></pre></td></tr></table></figure><p>这将按照你提供的邮箱地址，创建一对密钥</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -keygen -t rsa -C &quot;your_email@example.com&quot;</span><br></pre></td></tr></table></figure></li><li><p>在gitHub账户中添加你的公钥<br>帐户 – setting – SSH and GPG keys – New SSH key</p></li><li><p>更新文章</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean </span><br><span class="line"></span><br><span class="line">$ hexo g</span><br><span class="line"></span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 记录 </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
